// Code generated by protoc-gen-go.
// source: proto/doorservice.proto
// DO NOT EDIT!

/*
Package doorservice is a generated protocol buffer package.

It is generated from these files:
	proto/doorservice.proto

It has these top-level messages:
	UpdateStateRequest
	UpdateStateResponse
	AccessStreamRequest
	AccessStreamResponse
*/
package doorservice

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type DoorState int32

const (
	DoorState_OPEN  DoorState = 0
	DoorState_CLOSE DoorState = 1
)

var DoorState_name = map[int32]string{
	0: "OPEN",
	1: "CLOSE",
}
var DoorState_value = map[string]int32{
	"OPEN":  0,
	"CLOSE": 1,
}

func (x DoorState) String() string {
	return proto.EnumName(DoorState_name, int32(x))
}
func (DoorState) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type UpdateStateRequest struct {
	State  DoorState `protobuf:"varint,1,opt,name=state,enum=doorservice.DoorState" json:"state,omitempty"`
	Serial int64     `protobuf:"varint,2,opt,name=serial" json:"serial,omitempty"`
}

func (m *UpdateStateRequest) Reset()                    { *m = UpdateStateRequest{} }
func (m *UpdateStateRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateStateRequest) ProtoMessage()               {}
func (*UpdateStateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type UpdateStateResponse struct {
}

func (m *UpdateStateResponse) Reset()                    { *m = UpdateStateResponse{} }
func (m *UpdateStateResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateStateResponse) ProtoMessage()               {}
func (*UpdateStateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type AccessStreamRequest struct {
	Serial int64 `protobuf:"varint,1,opt,name=serial" json:"serial,omitempty"`
}

func (m *AccessStreamRequest) Reset()                    { *m = AccessStreamRequest{} }
func (m *AccessStreamRequest) String() string            { return proto.CompactTextString(m) }
func (*AccessStreamRequest) ProtoMessage()               {}
func (*AccessStreamRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type AccessStreamResponse struct {
	OpenDoor bool `protobuf:"varint,1,opt,name=OpenDoor" json:"OpenDoor,omitempty"`
}

func (m *AccessStreamResponse) Reset()                    { *m = AccessStreamResponse{} }
func (m *AccessStreamResponse) String() string            { return proto.CompactTextString(m) }
func (*AccessStreamResponse) ProtoMessage()               {}
func (*AccessStreamResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func init() {
	proto.RegisterType((*UpdateStateRequest)(nil), "doorservice.UpdateStateRequest")
	proto.RegisterType((*UpdateStateResponse)(nil), "doorservice.UpdateStateResponse")
	proto.RegisterType((*AccessStreamRequest)(nil), "doorservice.AccessStreamRequest")
	proto.RegisterType((*AccessStreamResponse)(nil), "doorservice.AccessStreamResponse")
	proto.RegisterEnum("doorservice.DoorState", DoorState_name, DoorState_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for DoorService service

type DoorServiceClient interface {
	UpdateState(ctx context.Context, in *UpdateStateRequest, opts ...grpc.CallOption) (*UpdateStateResponse, error)
	AccessStream(ctx context.Context, in *AccessStreamRequest, opts ...grpc.CallOption) (DoorService_AccessStreamClient, error)
}

type doorServiceClient struct {
	cc *grpc.ClientConn
}

func NewDoorServiceClient(cc *grpc.ClientConn) DoorServiceClient {
	return &doorServiceClient{cc}
}

func (c *doorServiceClient) UpdateState(ctx context.Context, in *UpdateStateRequest, opts ...grpc.CallOption) (*UpdateStateResponse, error) {
	out := new(UpdateStateResponse)
	err := grpc.Invoke(ctx, "/doorservice.DoorService/UpdateState", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *doorServiceClient) AccessStream(ctx context.Context, in *AccessStreamRequest, opts ...grpc.CallOption) (DoorService_AccessStreamClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_DoorService_serviceDesc.Streams[0], c.cc, "/doorservice.DoorService/AccessStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &doorServiceAccessStreamClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type DoorService_AccessStreamClient interface {
	Recv() (*AccessStreamResponse, error)
	grpc.ClientStream
}

type doorServiceAccessStreamClient struct {
	grpc.ClientStream
}

func (x *doorServiceAccessStreamClient) Recv() (*AccessStreamResponse, error) {
	m := new(AccessStreamResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for DoorService service

type DoorServiceServer interface {
	UpdateState(context.Context, *UpdateStateRequest) (*UpdateStateResponse, error)
	AccessStream(*AccessStreamRequest, DoorService_AccessStreamServer) error
}

func RegisterDoorServiceServer(s *grpc.Server, srv DoorServiceServer) {
	s.RegisterService(&_DoorService_serviceDesc, srv)
}

func _DoorService_UpdateState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateStateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DoorServiceServer).UpdateState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/doorservice.DoorService/UpdateState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DoorServiceServer).UpdateState(ctx, req.(*UpdateStateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DoorService_AccessStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(AccessStreamRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(DoorServiceServer).AccessStream(m, &doorServiceAccessStreamServer{stream})
}

type DoorService_AccessStreamServer interface {
	Send(*AccessStreamResponse) error
	grpc.ServerStream
}

type doorServiceAccessStreamServer struct {
	grpc.ServerStream
}

func (x *doorServiceAccessStreamServer) Send(m *AccessStreamResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _DoorService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "doorservice.DoorService",
	HandlerType: (*DoorServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UpdateState",
			Handler:    _DoorService_UpdateState_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "AccessStream",
			Handler:       _DoorService_AccessStream_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "proto/doorservice.proto",
}

func init() { proto.RegisterFile("proto/doorservice.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 258 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x91, 0xcf, 0x4a, 0xc3, 0x40,
	0x10, 0x87, 0xbb, 0x6a, 0x4b, 0x3a, 0x11, 0x29, 0x53, 0xad, 0x25, 0x17, 0x63, 0x4e, 0x45, 0xb4,
	0x4a, 0x7c, 0x02, 0xd1, 0xde, 0xc4, 0x48, 0x82, 0x08, 0xde, 0x62, 0x3a, 0x87, 0x82, 0x76, 0xd7,
	0x9d, 0xd5, 0x87, 0xf3, 0xe9, 0xa4, 0xbb, 0x6d, 0xdc, 0xc5, 0x3f, 0xc7, 0x19, 0xbe, 0xf9, 0xf6,
	0x37, 0xb3, 0x70, 0xa8, 0xb4, 0x34, 0xf2, 0x7c, 0x2e, 0xa5, 0x66, 0xd2, 0x1f, 0x8b, 0x86, 0xa6,
	0xb6, 0x83, 0xb1, 0xd7, 0xca, 0x9e, 0x00, 0x1f, 0xd4, 0xbc, 0x36, 0x54, 0x99, 0xda, 0x50, 0x49,
	0x6f, 0xef, 0xc4, 0x06, 0x4f, 0xa1, 0xcb, 0xab, 0x7a, 0x2c, 0x52, 0x31, 0xd9, 0xcb, 0x47, 0x53,
	0xdf, 0x72, 0x23, 0xa5, 0x76, 0xb4, 0x83, 0x70, 0x04, 0x3d, 0x26, 0xbd, 0xa8, 0x5f, 0xc6, 0x5b,
	0xa9, 0x98, 0x6c, 0x97, 0xeb, 0x2a, 0x3b, 0x80, 0x61, 0xe0, 0x66, 0x25, 0x97, 0x4c, 0xd9, 0x19,
	0x0c, 0xaf, 0x9a, 0x86, 0x98, 0x2b, 0xa3, 0xa9, 0x7e, 0xdd, 0xbc, 0xf9, 0x6d, 0x11, 0x81, 0x25,
	0x87, 0xfd, 0x10, 0x77, 0x1a, 0x4c, 0x20, 0x2a, 0x14, 0x2d, 0x57, 0x69, 0xec, 0x44, 0x54, 0xb6,
	0xf5, 0x49, 0x0a, 0xfd, 0x36, 0x25, 0x46, 0xb0, 0x53, 0xdc, 0xcf, 0xee, 0x06, 0x1d, 0xec, 0x43,
	0xf7, 0xfa, 0xb6, 0xa8, 0x66, 0x03, 0x91, 0x7f, 0x0a, 0x88, 0x2d, 0xe2, 0x96, 0xc2, 0x12, 0x62,
	0x2f, 0x2b, 0x1e, 0x05, 0x1b, 0xff, 0xbc, 0x50, 0x92, 0xfe, 0x0d, 0xac, 0xd7, 0xec, 0xe0, 0x23,
	0xec, 0xfa, 0xc9, 0x31, 0x9c, 0xf9, 0xe5, 0x06, 0xc9, 0xf1, 0x3f, 0xc4, 0x46, 0x7b, 0x21, 0x9e,
	0x7b, 0xf6, 0x23, 0x2f, 0xbf, 0x02, 0x00, 0x00, 0xff, 0xff, 0xc8, 0xec, 0xaa, 0xb5, 0xe3, 0x01,
	0x00, 0x00,
}
